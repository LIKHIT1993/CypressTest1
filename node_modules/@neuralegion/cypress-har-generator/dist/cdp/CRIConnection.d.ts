import { RetryStrategy } from './RetryStrategy';
import { Logger } from '../utils';
import { ChromeRemoteInterfaceOptions, Network, Security } from 'chrome-remote-interface';
import ProtocolMapping from 'devtools-protocol/types/protocol-mapping';
export declare type ChromeRemoteInterfaceMethod = keyof ProtocolMapping.Events;
export declare type ChromeRemoteInterfaceEvent = {
    method: ChromeRemoteInterfaceMethod;
    params?: ProtocolMapping.Events[ChromeRemoteInterfaceMethod][0];
};
export declare class CRIConnection {
    private readonly options;
    private readonly logger;
    private readonly retryStrategy;
    private chromeRemoteInterface?;
    get network(): Network | undefined;
    get security(): Security | undefined;
    constructor(options: ChromeRemoteInterfaceOptions, logger: Logger, retryStrategy: RetryStrategy);
    open(): Promise<void>;
    close(): Promise<void>;
    subscribe(callback: (event: ChromeRemoteInterfaceEvent) => void): Promise<void>;
}
